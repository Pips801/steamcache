#
# This minimal configuration is part of the steam cache docker image.
#

log_format steamcache-default '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" DEFAULT';
log_format steamcache-other '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" OTHER';
log_format steamcache-local '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" LOCAL';
log_format steamcache-remote '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" REMOTE';

server {
	listen 80;
	server_name *.cs.steampowered.com content1.steampowered.com content2.steampowered.com content3.steampowered.com content4.steampowered.com content5.steampowered.com content6.steampowered.com content7.steampowered.com content8.steampowered.com;

	access_log /data/logs/access.log steamcache-default;
	error_log /data/logs/error.log;

    root   /data/cache/;
    index  index.html index.htm;

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

	proxy_temp_path /tmp/nginx/ 1 2;

	## Uncomment this line to proxy through steamcache.net.
	## This allows us to keep the online cache up-to-date for events
	## to rsync down to their own caches.
	## As a bonus, this also allows you to configure a single route to
	## direct your Steam download traffic down an alternative network
	## interface (e.g. 3G modem, second DSL line) from your primary
	## internet connection.
	resolver 8.8.8.8;

	location /depot/ {
		try_files $uri @mirror;
		access_log /data/logs/access.log steamcache-local;
	}

	location / {
		proxy_next_upstream error timeout http_404;

		proxy_pass http://$host$request_uri;
		proxy_redirect off;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		add_header X-Mirror-Upstream-Status $upstream_status;
		add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
		add_header X-Mirror-Status $upstream_cache_status;

		add_header Host $host;

		access_log /data/logs/access.log steamcache-other;
	}

	location @mirror {
		proxy_store on;
		proxy_store_access user:rw group:rw all:r;
		proxy_next_upstream error timeout http_404;
		proxy_pass http://$host$request_uri;
		proxy_redirect off;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		add_header X-Mirror-Upstream-Status $upstream_status;
		add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
		add_header X-Mirror-Status $upstream_cache_status;

		access_log /data/logs/access.log steamcache-remote;
	}
}

## testing

server {
  listen 80;

  access_log /data/logs/access.log cachelog;
  error_log /data/logs/error.log;

  resolver 8.8.8.8 8.8.4.4;

proxy_cache_path /data/cache/cache levels=2:2 keys_zone=generic:500m inactive=200d max_size=500000m loader_files=1000 loader_sleep=50ms loader_threshold=300ms;
  location / {
    # Cache Location
    slice 1m;
    proxy_cache generic;

	proxy_ignore_headers Expires Cache-Control;
	proxy_cache_key   $uri$slice_range;
	proxy_cache_valid 200 206 7d;
	proxy_set_header  Range $slice_range;

	# Only download one copy at a time and use a large timeout so
	# this really happens, otherwise we end up wasting bandwith
	# getting the file multiple times.
	proxy_cache_lock on;
	proxy_cache_lock_timeout 1h;

	# Allow the use of state entries
	proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

	# Allow caching of 200 but not 301 or 302 as our cache key may not include query params
	# hence may not be valid for all users
	proxy_cache_valid 200 90d;
	proxy_cache_valid 301 302 0;

	# Enable cache revalidation
	proxy_cache_revalidate on;

	# Don't cache requests marked as nocache=1
	proxy_cache_bypass $arg_nocache;

	# 40G max file
	proxy_max_temp_file_size 40960m;

	# Upstream Configuration
	proxy_next_upstream error timeout http_404;
	proxy_pass http://$host$request_uri;
	proxy_redirect off;
	proxy_ignore_client_abort on;

	# Upstream request headers
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Debug Headers
	add_header X-Upstream-Status $upstream_status;
	add_header X-Upstream-Response-Time $upstream_response_time;
	add_header X-Upstream-Cache-Status $upstream_cache_status;

  }
}
